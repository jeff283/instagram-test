{"version":3,"sources":["comps/Title.js","firebase/config.js","hooks/useStorage.js","comps/ProgressBar.js","comps/UploadForm.js","hooks/useFirestore.js","comps/ImageGrid.js","comps/Modal.js","App.js","index.js"],"names":["Title","className","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","projectStorage","storage","projectFirestore","firestore","timestamp","FieldValue","serverTimestamp","useStorage","file","useState","progress","setProgress","error","setError","url","setUrl","useEffect","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","motion","div","initial","width","animate","UploadForm","types","type","onChange","e","selected","target","files","includes","useFirestore","docs","setDocs","unsub","orderBy","onSnapshot","documents","forEach","doc","push","data","id","ImageGrid","setSelected","map","key","layout","whileHover","opacity","onClick","img","src","alt","transition","delay","Modal","classList","contains","y","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b362034.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Title = () => {\r\n  return (\r\n    <div className=\"title\">\r\n      <h1>FireGram</h1>\r\n      <h2>Your Pictures</h2>\r\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Title;","  import  firebase from \"firebase/app\";\r\n  import \"firebase/storage\";\r\n  import \"firebase/firestore\";\r\n  \r\n  // Your web app's Firebase configuration\r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyBVpawoJ5oR0geGfRLoD23cLNzOSlwQHJc\",\r\n    authDomain: \"linver-firegram.firebaseapp.com\",\r\n    projectId: \"linver-firegram\",\r\n    storageBucket: \"linver-firegram.appspot.com\",\r\n    messagingSenderId: \"94964639513\",\r\n    appId: \"1:94964639513:web:4d80e1879940c7aae28788\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  const projectStorage = firebase.storage();\r\n  const projectFirestore = firebase.firestore();\r\n  const timestamp = firebase.firestore.FieldValue.serverTimestamp;\r\n\r\n  export { projectStorage, projectFirestore, timestamp};","import { useState, useEffect } from \"react\";\r\nimport React from 'react';\r\nimport { projectStorage, projectFirestore, timestamp} from \"../firebase/config\"\r\n\r\n\r\n\r\nconst useStorage = (file) => {\r\n\r\n    const [progress, setProgress] = useState(0);\r\n    const [error, setError] = useState(null);\r\n    const [url, setUrl] = useState(null);\r\n\r\n    useEffect(() => {\r\n        //refrences\r\n        const storageRef = projectStorage.ref(file.name)\r\n        const collectionRef = projectFirestore.collection('images');\r\n\r\n        storageRef.put(file).on('state_change', (snap) =>{\r\n            let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n            setProgress(percentage);\r\n        }, (err) => {\r\n            setError(err);\r\n        }, async () => {\r\n            const url = await storageRef.getDownloadURL();\r\n            const createdAt = timestamp();\r\n            collectionRef.add({url, createdAt})\r\n            setUrl(url);\r\n        })\r\n    }, [file]);\r\n\r\n    return {progress, url, error}\r\n\r\n\r\n}\r\n\r\nexport default useStorage\r\n","import React, { useEffect } from \"react\";\r\nimport useStorage from \"../hooks/useStorage\"\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst ProgressBar = ({file, setFile}) => {\r\n    const {url, progress} = useStorage(file);\r\n    useEffect(() => {\r\n        if (url){\r\n            setFile(null);\r\n        }\r\n    }, [url, setFile])\r\n    return (\r\n        <motion.div className=\"progress-bar\" \r\n            initial={{width:0}}\r\n            animate={{width: progress + \"%\"}}\r\n        ></motion.div>\r\n    )\r\n}\r\n\r\nexport default ProgressBar\r\n","import React, {useState} from 'react'\r\nimport ProgressBar from './ProgressBar';\r\n\r\nconst UploadForm = () => {\r\n    const [file, setFile] = useState(null);\r\n    const [error, setError] = useState(null);\r\n\r\n    const types = ['image/png', 'image/jpeg'];\r\n\r\n    const changeHandler = (e) =>{\r\n        let selected = e.target.files[0];\r\n        if(selected && types.includes(selected.type)){\r\n            setFile(selected);\r\n            setError('');\r\n        } else{\r\n            setFile(null);\r\n            setError('Please selected an image file (png or jpeg)');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form>\r\n            <label>\r\n                <input type=\"file\" onChange={changeHandler}/>\r\n                <span>+</span>\r\n            </label>\r\n            <div className=\"output\">\r\n                {error && <div className=\"error\">{error}</div> }\r\n                {file && <div>{file.name}</div> }\r\n                {file && <ProgressBar file={file} setFile={setFile}/>}\r\n            </div>   \r\n        </form>\r\n    );\r\n}\r\n\r\nexport default UploadForm;","import  { useState, useEffect} from 'react'\r\nimport { projectFirestore } from \"../firebase/config\";\r\n\r\nconst useFirestore = (collection) => {\r\n    const[docs, setDocs] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const unsub = projectFirestore.collection(collection)\r\n        .orderBy('createdAt', 'desc')\r\n        .onSnapshot((snap) =>{\r\n            let documents = [];\r\n            snap.forEach(doc => {\r\n                documents.push({...doc.data(), id: doc.id});\r\n            });\r\n            setDocs(documents);\r\n        });\r\n        return () => unsub()\r\n    }, [collection]);\r\n\r\n    return {docs};\r\n}\r\n\r\nexport default useFirestore\r\n","import React from 'react'\r\nimport useFirestore from \"../hooks/useFirestore\"\r\nimport { motion } from 'framer-motion';\r\n\r\nconst ImageGrid = ({setSelected}) => {\r\n    const{ docs } = useFirestore('images');\r\n\r\n    return (\r\n        <div className=\"img-grid\">\r\n           { docs && docs.map(doc => (\r\n               <motion.div className=\"img-wrap\" key={doc.id}\r\n                    layout\r\n                    whileHover={{opacity: 1}}\r\n                    onClick={() => setSelected(doc.url)}\r\n               >\r\n                   <motion.img src={doc.url} alt=\"Rendered Images\"\r\n                        initial={{opacity:0}}\r\n                        animate={{opacity:1}}\r\n                        transition={{delay:1}}\r\n                   />\r\n\r\n\r\n               </motion.div>\r\n\r\n            )) } \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageGrid\r\n","import React from 'react'\r\nimport { motion } from \"framer-motion\";\r\n\r\n\r\nconst Modal = ({selected, setSelected}) => {\r\n    const handleClick = (e) => {\r\n        if(e.target.classList.contains(\"backdrop\")){\r\n            setSelected(null);\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <motion.div className=\"backdrop\" onClick={handleClick}\r\n            initial={{opacity:0}}\r\n            animate={{opacity:1}}\r\n        >\r\n            <motion.img src={selected} alt=\"Clicked pic\"\r\n                initial={{y:\"-100vh\"}}\r\n                animate={{y:0}}\r\n            />\r\n        </motion.div>\r\n    )\r\n}\r\n\r\nexport default Modal\r\n","import React, { useState } from 'react';\r\nimport Title from './comps/Title';\r\nimport UploadForm from './comps/UploadForm';\r\nimport ImageGrid from './comps/ImageGrid';\r\nimport Modal from './comps/Modal';\r\n\r\nfunction App() {\r\n  const [selected, setSelected] = useState(null);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Title/>\r\n      <UploadForm/>\r\n      <ImageGrid setSelected={setSelected}/>\r\n      {selected && <Modal selected={selected} setSelected={setSelected}/>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}